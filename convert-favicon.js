const sharp = require('sharp');
const fs = require('fs');

async function convertFavicon() {
  try {
    // Lire le fichier JPEG source
    const jpegInput = '/app/public/favicon-temp.jpg';
    
    // Convertir en PNG (180x180) pour Apple touch icon
    await sharp(jpegInput)
      .resize(180, 180, { 
        kernel: sharp.kernel.lanczos3,
        fit: 'cover',
        position: 'center'
      })
      .png({ 
        quality: 90,
        compressionLevel: 9,
        palette: true
      })
      .toFile('/app/public/favicon.png');
    
    console.log('‚úÖ favicon.png cr√©√© avec succ√®s (180x180)');
    
    // Convertir en ICO n√©cessite plusieurs tailles
    // Cr√©er 16x16, 32x32, 48x48 en PNG puis les combiner
    
    // Cr√©er 16x16
    await sharp(jpegInput)
      .resize(16, 16, { 
        kernel: sharp.kernel.lanczos3,
        fit: 'cover',
        position: 'center'
      })
      .png({ 
        quality: 90,
        compressionLevel: 9,
        palette: true
      })
      .toFile('/app/public/favicon-16x16.png');
    
    // Cr√©er 32x32
    await sharp(jpegInput)
      .resize(32, 32, { 
        kernel: sharp.kernel.lanczos3,
        fit: 'cover',
        position: 'center'
      })
      .png({ 
        quality: 90,
        compressionLevel: 9,
        palette: true
      })
      .toFile('/app/public/favicon-32x32.png');
    
    // Cr√©er 48x48
    await sharp(jpegInput)
      .resize(48, 48, { 
        kernel: sharp.kernel.lanczos3,
        fit: 'cover',
        position: 'center'
      })
      .png({ 
        quality: 90,
        compressionLevel: 9,
        palette: true
      })
      .toFile('/app/public/favicon-48x48.png');
    
    console.log('‚úÖ Fichiers PNG multiples cr√©√©s avec succ√®s');
    
    // Pour l'ICO, nous allons cr√©er un fichier PNG simple de 32x32 et le renommer
    // Note: Sharp ne peut pas cr√©er des vrais fichiers ICO, mais les navigateurs modernes
    // acceptent les fichiers PNG renomm√©s en .ico
    await sharp(jpegInput)
      .resize(32, 32, { 
        kernel: sharp.kernel.lanczos3,
        fit: 'cover',
        position: 'center'
      })
      .png({ 
        quality: 90,
        compressionLevel: 9,
        palette: true
      })
      .toFile('/app/public/favicon.ico');
    
    console.log('‚úÖ favicon.ico cr√©√© avec succ√®s (32x32 PNG)');
    
    // V√©rifier les tailles des fichiers
    const faviconIcoSize = fs.statSync('/app/public/favicon.ico').size;
    const faviconPngSize = fs.statSync('/app/public/favicon.png').size;
    
    console.log(`üìä Taille favicon.ico: ${Math.round(faviconIcoSize / 1024)}KB`);
    console.log(`üìä Taille favicon.png: ${Math.round(faviconPngSize / 1024)}KB`);
    
    // V√©rifier les signatures de fichier
    const icoBuffer = fs.readFileSync('/app/public/favicon.ico');
    const pngBuffer = fs.readFileSync('/app/public/favicon.png');
    
    console.log(`üîç Signature favicon.ico: ${icoBuffer.slice(0, 4).toString('hex')}`);
    console.log(`üîç Signature favicon.png: ${pngBuffer.slice(0, 4).toString('hex')}`);
    
    console.log('‚úÖ Conversion termin√©e avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la conversion:', error);
    process.exit(1);
  }
}

convertFavicon();